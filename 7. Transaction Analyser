# Step 1: Define the list of transactions
data = [
    (749.17, "Investment Return"),
    (-11.54, "Utilities"),
    (-247.58, "Online Shopping"),
    (981.17, "Investment Return"),
    (-410.65, "Rent"),
    (310.60, "Rent"),
    (563.70, "Gift"),
    (220.79, "Salary"),
    (-49.85, "Car Maintenance"),
    (308.49, "Salary"),
    (-205.55, "Car Maintenance"),
    (870.64, "Salary"),
    (-881.51, "Utilities"),
    (518.14, "Salary"),
    (-264.66, "Groceries")
]

# Step 2: Function to print all transactions
def print_transactions(transactions):
    # Iterate through each transaction and print the amount and statement
    for amount, statement in transactions:
        print(f"${amount} - {statement}")

# Step 3: Function to print a summary of transactions
def print_summary(transactions):
    # Extract and sum all deposits
    deposits = [transaction[0] for transaction in transactions if transaction[0] >= 0]
    total_deposited = sum(deposits)
    print(f"Total Deposited: ${total_deposited}")

    # Extract and sum all withdrawals
    withdrawals = [transaction[0] for transaction in transactions if transaction[0] < 0]
    total_withdrawn = sum(withdrawals)
    print(f"Total Withdrawn: ${total_withdrawn}")

    # Calculate and print the balance
    balance = total_deposited + total_withdrawn
    print(f"Balance: ${balance}")

# Step 4: Function to analyze transactions in detail
def analyze_transactions(transactions):
    # Sort the transactions by amount
    transactions.sort()
    
    # Identify the largest withdrawal and deposit
    largest_withdrawal = transactions[0]
    largest_deposit = transactions[-1]
    print(f"Largest Withdrawal: ${largest_withdrawal[0]} - {largest_withdrawal[1]}")
    print(f"Largest Deposit: ${largest_deposit[0]} - {largest_deposit[1]}")

    # Analyze deposits
    deposits = [transaction[0] for transaction in transactions if transaction[0] >= 0]
    total_deposit = sum(deposits)
    average_deposit = total_deposit / len(deposits) if deposits else 0
    smallest_deposit = min(deposits) if deposits else 0
    print(f"Average Deposit: ${average_deposit}")
    print(f"Smallest Deposit: ${smallest_deposit}")

    # Analyze withdrawals
    withdrawals = [transaction[0] for transaction in transactions if transaction[0] < 0]
    total_withdrawal = sum(withdrawals)
    average_withdrawal = total_withdrawal / len(withdrawals) if withdrawals else 0
    print(f"Average Withdrawal: ${average_withdrawal}")

# Step 5: Print all transactions
print("Transaction List:")
print_transactions(data)

# Step 6: Interactive menu for transaction analysis
print("\nTransaction Analyzer")
while True:
    # Display menu options
    print("\nChoose an option:")
    print("1. Print summary (type 'print')")
    print("2. Analyze transactions (type 'analyze')")
    print("3. Stop program (type 'stop')")
    
    # Get user input
    choice = input("Enter your option: ")
    
    # Perform actions based on user choice
    if choice.lower() == "print":
        print_summary(data)
    elif choice.lower() == "analyze":
        analyze_transactions(data)
    elif choice.lower() == "stop":
        print("Exiting program. Goodbye!")
        break
    else:
        print("Invalid Choice. Please try again.")
